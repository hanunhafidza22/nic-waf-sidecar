apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      # Container utama (app1)
      - name: app1
        image: nginx:alpine
        ports:
        - containerPort: 8080
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 8080;
            server_name app1.local;
            location / {
              root /usr/share/nginx/html;
              index index.html;
            }
          }' > /etc/nginx/conf.d/default.conf &&
          echo '<h1>Hello from App1 on port 8080!</h1>' > /usr/share/nginx/html/index.html &&
          nginx -g 'daemon off;'

      # Sidecar NGINX
      - name: sidecar-nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sidecar-config
          mountPath: /etc/nginx/conf.d
          #subPath: default.conf
        - name: nginx-logs
          mountPath: /var/log/nginx
      volumes:
      - name: sidecar-config
        configMap:
          name: sidecar-api-key-limit-dynamic-web
      - name: nginx-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sidecar-app1
spec:
  selector:
    app: app1
  ports:
    - port: 80
      targetPort: 80
